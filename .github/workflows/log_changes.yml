# This is a basic workflow to help you get started with Actions

name: Log changed files and update hashes

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  pull_request:
    types: [ closed ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    if: github.event.pull_request.merged == true
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install lxml
          pip install bs4
          pip install pandas
          pip install kblab-client
          pip install PyPDF2
          pip install progressbar2
          
      - name: Test with unittest
        run: |
          python -m unittest test.db
          
      - name: Changed Files Exporter
        id: changedfiles
        uses: futuratrepadeira/changed-files@v3.3.0
        with:
          repo-token: ${{ github.token }}

      - name: Update hashes
        run:
             PYTHONPATH="$PYTHONPATH:." python scripts/update_hashes.py ${{steps.changedfiles.outputs.files_updated}}
      - name: Commit files
        id: commit
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "github-actions"
          git add --all
          if [-z "$(git status --porcelain)"]; then
             echo "::set-output name=push::false"
          else
             git commit -m "Add changes for PR#${{github.event.pull_request.number}} " -a
             echo "::set-output name=push::true"
          fi
        shell: bash
      - name: Push changes
        if: steps.commit.outputs.push == 'true'
        uses: ad-m/github-push-action@master
        with:
           github_token: ${{ secrets.GITHUB_TOKEN }}
           branch: ${{ github.ref }}

        
